Terminals unused in grammar

    EXT_DEF_LIST
    EXT_VAR_DEF
    FUNC_DEF
    FUNC_DEC
    EXT_DEC_LIST
    PARAM_LIST
    PARAM_DEC
    VAR_DEF
    VAR_DEC
    VAR_DEC_LIST
    VAR_DEF_LIST
    COMP_STM
    STM_LIST
    EXP_STMT
    IF_THEN
    IF_THEN_ELSE
    FUNC_CALL
    ARGS
    ARRAY_DEC
    ARRAY_VAL
    ARRAY_SUB_LIST
    ARRAY_INIT_LIST


Grammar

    0 $accept: Program $end

    1 Program: ExtDefList

    2 ExtDefList: %empty
    3           | ExtDef ExtDefList

    4 ExtDef: Specifier ExtDecList SEMI
    5       | Specifier FuncDec CompSt
    6       | error SEMI

    7 Specifier: TYPE

    8 ExtDecList: VarDec
    9           | VarDec COMMA ExtDecList
   10           | ArrayDec
   11           | ArrayDec COMMA ExtDecList

   12 ArrayDec: ID ArraySubList
   13         | ID ArraySubList ASSIGNOP ArrayInitList

   14 ArraySubList: LS Exp RS
   15             | LS Exp RS ArraySubList

   16 ArrayInitList: LC Args RC

   17 FuncDec: ID LP ParamList RP
   18        | ID LP RP

   19 ParamList: ParamDec
   20          | ParamDec COMMA ParamList

   21 ParamDec: Specifier ID

   22 CompSt: LC VarDefList StmList RC

   23 StmList: %empty
   24        | Stmt StmList

   25 Stmt: Exp SEMI
   26     | CompSt
   27     | RETURN Exp SEMI
   28     | IF LP Exp RP Stmt
   29     | IF LP Exp RP Stmt ELSE Stmt
   30     | WHILE LP Exp RP Stmt
   31     | SEMI
   32     | CONTINUE
   33     | BREAK

   34 VarDefList: %empty
   35           | VarDef VarDefList
   36           | error SEMI

   37 VarDef: Specifier VarDecList SEMI

   38 VarDecList: VarDec
   39           | VarDec COMMA VarDecList
   40           | ArrayDec
   41           | ArrayDec COMMA ExtDecList

   42 VarDec: ID
   43       | ID ASSIGNOP Exp

   44 Exp: Exp ASSIGNOP Exp
   45    | Exp AND Exp
   46    | Exp OR Exp
   47    | Exp RELOP Exp
   48    | Exp PLUS Exp
   49    | Exp MINUS Exp
   50    | Exp STAR Exp
   51    | Exp DIV Exp
   52    | Exp MOD Exp
   53    | Exp COMP_ASSIGN Exp
   54    | Exp BITAND Exp
   55    | Exp BITOR Exp
   56    | Exp BITXOR Exp
   57    | Exp BITSHL Exp
   58    | Exp BITSHR Exp
   59    | LP Exp RP
   60    | MINUS Exp
   61    | NOT Exp
   62    | DPLUS Exp
   63    | Exp DPLUS
   64    | DMINUS Exp
   65    | Exp DMINUS
   66    | ID LP Args RP
   67    | ID LP RP
   68    | ID ArraySubList
   69    | ID
   70    | INT
   71    | FLOAT
   72    | CHAR

   73 Args: Exp COMMA Args
   74     | Exp


Terminals, with rules where they appear

    $end (0) 0
    error (256) 6 36
    INT <type_int> (258) 70
    ID <type_id> (259) 12 13 17 18 21 42 43 66 67 68 69
    RELOP <type_id> (260) 47
    TYPE <type_id> (261) 7
    COMP_ASSIGN <type_id> (262) 53
    FLOAT <type_float> (263) 71
    CHAR <type_char> (264) 72
    LP (265) 17 18 28 29 30 59 66 67
    RP (266) 17 18 28 29 30 59 66 67
    LC (267) 16 22
    RC (268) 16 22
    LS (269) 14 15
    RS (270) 14 15
    SEMI (271) 4 6 25 27 31 36 37
    COMMA (272) 9 11 20 39 41 73
    PLUS (273) 48
    MINUS (274) 49 60
    STAR (275) 50
    DIV (276) 51
    MOD (277) 52
    ASSIGNOP (278) 13 43 44
    AND (279) 45
    OR (280) 46
    NOT (281) 61
    BITAND (282) 54
    BITOR (283) 55
    BITXOR (284) 56
    BITSHL (285) 57
    BITSHR (286) 58
    IF (287) 28 29
    ELSE (288) 29
    WHILE (289) 30
    RETURN (290) 27
    CONTINUE (291) 32
    BREAK (292) 33
    EXT_DEF_LIST (293)
    EXT_VAR_DEF (294)
    FUNC_DEF (295)
    FUNC_DEC (296)
    EXT_DEC_LIST (297)
    PARAM_LIST (298)
    PARAM_DEC (299)
    VAR_DEF (300)
    VAR_DEC (301)
    VAR_DEC_LIST (302)
    VAR_DEF_LIST (303)
    COMP_STM (304)
    STM_LIST (305)
    EXP_STMT (306)
    IF_THEN (307)
    IF_THEN_ELSE (308)
    FUNC_CALL (309)
    ARGS (310)
    ARRAY_DEC (311)
    ARRAY_VAL (312)
    ARRAY_SUB_LIST (313)
    ARRAY_INIT_LIST (314)
    UMINUS (315)
    DPLUS (316) 62 63
    DMINUS (317) 64 65
    LOWER_THEN_ELSE (318)


Nonterminals, with rules where they appear

    $accept (64)
        on left: 0
    Program <ptr> (65)
        on left: 1
        on right: 0
    ExtDefList <ptr> (66)
        on left: 2 3
        on right: 1 3
    ExtDef <ptr> (67)
        on left: 4 5 6
        on right: 3
    Specifier <ptr> (68)
        on left: 7
        on right: 4 5 21 37
    ExtDecList <ptr> (69)
        on left: 8 9 10 11
        on right: 4 9 11 41
    ArrayDec <ptr> (70)
        on left: 12 13
        on right: 10 11 40 41
    ArraySubList <ptr> (71)
        on left: 14 15
        on right: 12 13 15 68
    ArrayInitList <ptr> (72)
        on left: 16
        on right: 13
    FuncDec <ptr> (73)
        on left: 17 18
        on right: 5
    ParamList <ptr> (74)
        on left: 19 20
        on right: 17 20
    ParamDec <ptr> (75)
        on left: 21
        on right: 19 20
    CompSt <ptr> (76)
        on left: 22
        on right: 5 26
    StmList <ptr> (77)
        on left: 23 24
        on right: 22 24
    Stmt <ptr> (78)
        on left: 25 26 27 28 29 30 31 32 33
        on right: 24 28 29 30
    VarDefList <ptr> (79)
        on left: 34 35 36
        on right: 22 35
    VarDef <ptr> (80)
        on left: 37
        on right: 35
    VarDecList <ptr> (81)
        on left: 38 39 40 41
        on right: 37 39
    VarDec <ptr> (82)
        on left: 42 43
        on right: 8 9 38 39
    Exp <ptr> (83)
        on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
        on right: 14 15 25 27 28 29 30 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 73 74
    Args <ptr> (84)
        on left: 73 74
        on right: 16 66 73


State 0

    0 $accept: . Program $end

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    $end  reduce using rule 2 (ExtDefList)

    Program     go to state 3
    ExtDefList  go to state 4
    ExtDef      go to state 5
    Specifier   go to state 6


State 1

    6 ExtDef: error . SEMI

    SEMI  shift, and go to state 7


State 2

    7 Specifier: TYPE .

    $default  reduce using rule 7 (Specifier)


State 3

    0 $accept: Program . $end

    $end  shift, and go to state 8


State 4

    1 Program: ExtDefList .

    $default  reduce using rule 1 (Program)


State 5

    3 ExtDefList: ExtDef . ExtDefList

    error  shift, and go to state 1
    TYPE   shift, and go to state 2

    $end  reduce using rule 2 (ExtDefList)

    ExtDefList  go to state 9
    ExtDef      go to state 5
    Specifier   go to state 6


State 6

    4 ExtDef: Specifier . ExtDecList SEMI
    5       | Specifier . FuncDec CompSt

    ID  shift, and go to state 10

    ExtDecList  go to state 11
    ArrayDec    go to state 12
    FuncDec     go to state 13
    VarDec      go to state 14


State 7

    6 ExtDef: error SEMI .

    $default  reduce using rule 6 (ExtDef)


State 8

    0 $accept: Program $end .

    $default  accept


State 9

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


State 10

   12 ArrayDec: ID . ArraySubList
   13         | ID . ArraySubList ASSIGNOP ArrayInitList
   17 FuncDec: ID . LP ParamList RP
   18        | ID . LP RP
   42 VarDec: ID .
   43       | ID . ASSIGNOP Exp

    LP        shift, and go to state 15
    LS        shift, and go to state 16
    ASSIGNOP  shift, and go to state 17

    $default  reduce using rule 42 (VarDec)

    ArraySubList  go to state 18


State 11

    4 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 19


State 12

   10 ExtDecList: ArrayDec .
   11           | ArrayDec . COMMA ExtDecList

    COMMA  shift, and go to state 20

    $default  reduce using rule 10 (ExtDecList)


State 13

    5 ExtDef: Specifier FuncDec . CompSt

    LC  shift, and go to state 21

    CompSt  go to state 22


State 14

    8 ExtDecList: VarDec .
    9           | VarDec . COMMA ExtDecList

    COMMA  shift, and go to state 23

    $default  reduce using rule 8 (ExtDecList)


State 15

   17 FuncDec: ID LP . ParamList RP
   18        | ID LP . RP

    TYPE  shift, and go to state 2
    RP    shift, and go to state 24

    Specifier  go to state 25
    ParamList  go to state 26
    ParamDec   go to state 27


State 16

   14 ArraySubList: LS . Exp RS
   15             | LS . Exp RS ArraySubList

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 37


State 17

   43 VarDec: ID ASSIGNOP . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 38


State 18

   12 ArrayDec: ID ArraySubList .
   13         | ID ArraySubList . ASSIGNOP ArrayInitList

    ASSIGNOP  shift, and go to state 39

    $default  reduce using rule 12 (ArrayDec)


State 19

    4 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 4 (ExtDef)


State 20

   11 ExtDecList: ArrayDec COMMA . ExtDecList

    ID  shift, and go to state 40

    ExtDecList  go to state 41
    ArrayDec    go to state 12
    VarDec      go to state 14


State 21

   22 CompSt: LC . VarDefList StmList RC

    error  shift, and go to state 42
    TYPE   shift, and go to state 2

    INT       reduce using rule 34 (VarDefList)
    ID        reduce using rule 34 (VarDefList)
    FLOAT     reduce using rule 34 (VarDefList)
    CHAR      reduce using rule 34 (VarDefList)
    LP        reduce using rule 34 (VarDefList)
    LC        reduce using rule 34 (VarDefList)
    RC        reduce using rule 34 (VarDefList)
    SEMI      reduce using rule 34 (VarDefList)
    MINUS     reduce using rule 34 (VarDefList)
    NOT       reduce using rule 34 (VarDefList)
    IF        reduce using rule 34 (VarDefList)
    WHILE     reduce using rule 34 (VarDefList)
    RETURN    reduce using rule 34 (VarDefList)
    CONTINUE  reduce using rule 34 (VarDefList)
    BREAK     reduce using rule 34 (VarDefList)
    DPLUS     reduce using rule 34 (VarDefList)
    DMINUS    reduce using rule 34 (VarDefList)

    Specifier   go to state 43
    VarDefList  go to state 44
    VarDef      go to state 45


State 22

    5 ExtDef: Specifier FuncDec CompSt .

    $default  reduce using rule 5 (ExtDef)


State 23

    9 ExtDecList: VarDec COMMA . ExtDecList

    ID  shift, and go to state 40

    ExtDecList  go to state 46
    ArrayDec    go to state 12
    VarDec      go to state 14


State 24

   18 FuncDec: ID LP RP .

    $default  reduce using rule 18 (FuncDec)


State 25

   21 ParamDec: Specifier . ID

    ID  shift, and go to state 47


State 26

   17 FuncDec: ID LP ParamList . RP

    RP  shift, and go to state 48


State 27

   19 ParamList: ParamDec .
   20          | ParamDec . COMMA ParamList

    COMMA  shift, and go to state 49

    $default  reduce using rule 19 (ParamList)


State 28

   70 Exp: INT .

    $default  reduce using rule 70 (Exp)


State 29

   66 Exp: ID . LP Args RP
   67    | ID . LP RP
   68    | ID . ArraySubList
   69    | ID .

    LP  shift, and go to state 50
    LS  shift, and go to state 16

    $default  reduce using rule 69 (Exp)

    ArraySubList  go to state 51


State 30

   71 Exp: FLOAT .

    $default  reduce using rule 71 (Exp)


State 31

   72 Exp: CHAR .

    $default  reduce using rule 72 (Exp)


State 32

   59 Exp: LP . Exp RP

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 52


State 33

   60 Exp: MINUS . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 53


State 34

   61 Exp: NOT . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 54


State 35

   62 Exp: DPLUS . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 55


State 36

   64 Exp: DMINUS . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 56


State 37

   14 ArraySubList: LS Exp . RS
   15             | LS Exp . RS ArraySubList
   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP        shift, and go to state 57
    COMP_ASSIGN  shift, and go to state 58
    RS           shift, and go to state 59
    PLUS         shift, and go to state 60
    MINUS        shift, and go to state 61
    STAR         shift, and go to state 62
    DIV          shift, and go to state 63
    MOD          shift, and go to state 64
    ASSIGNOP     shift, and go to state 65
    AND          shift, and go to state 66
    OR           shift, and go to state 67
    BITAND       shift, and go to state 68
    BITOR        shift, and go to state 69
    BITXOR       shift, and go to state 70
    BITSHL       shift, and go to state 71
    BITSHR       shift, and go to state 72
    DPLUS        shift, and go to state 73
    DMINUS       shift, and go to state 74


State 38

   43 VarDec: ID ASSIGNOP Exp .
   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP        shift, and go to state 57
    COMP_ASSIGN  shift, and go to state 58
    PLUS         shift, and go to state 60
    MINUS        shift, and go to state 61
    STAR         shift, and go to state 62
    DIV          shift, and go to state 63
    MOD          shift, and go to state 64
    ASSIGNOP     shift, and go to state 65
    AND          shift, and go to state 66
    OR           shift, and go to state 67
    BITAND       shift, and go to state 68
    BITOR        shift, and go to state 69
    BITXOR       shift, and go to state 70
    BITSHL       shift, and go to state 71
    BITSHR       shift, and go to state 72
    DPLUS        shift, and go to state 73
    DMINUS       shift, and go to state 74

    $default  reduce using rule 43 (VarDec)


State 39

   13 ArrayDec: ID ArraySubList ASSIGNOP . ArrayInitList

    LC  shift, and go to state 75

    ArrayInitList  go to state 76


State 40

   12 ArrayDec: ID . ArraySubList
   13         | ID . ArraySubList ASSIGNOP ArrayInitList
   42 VarDec: ID .
   43       | ID . ASSIGNOP Exp

    LS        shift, and go to state 16
    ASSIGNOP  shift, and go to state 17

    $default  reduce using rule 42 (VarDec)

    ArraySubList  go to state 18


State 41

   11 ExtDecList: ArrayDec COMMA ExtDecList .

    $default  reduce using rule 11 (ExtDecList)


State 42

   36 VarDefList: error . SEMI

    SEMI  shift, and go to state 77


State 43

   37 VarDef: Specifier . VarDecList SEMI

    ID  shift, and go to state 40

    ArrayDec    go to state 78
    VarDecList  go to state 79
    VarDec      go to state 80


State 44

   22 CompSt: LC VarDefList . StmList RC

    INT       shift, and go to state 28
    ID        shift, and go to state 29
    FLOAT     shift, and go to state 30
    CHAR      shift, and go to state 31
    LP        shift, and go to state 32
    LC        shift, and go to state 21
    SEMI      shift, and go to state 81
    MINUS     shift, and go to state 33
    NOT       shift, and go to state 34
    IF        shift, and go to state 82
    WHILE     shift, and go to state 83
    RETURN    shift, and go to state 84
    CONTINUE  shift, and go to state 85
    BREAK     shift, and go to state 86
    DPLUS     shift, and go to state 35
    DMINUS    shift, and go to state 36

    $default  reduce using rule 23 (StmList)

    CompSt   go to state 87
    StmList  go to state 88
    Stmt     go to state 89
    Exp      go to state 90


State 45

   35 VarDefList: VarDef . VarDefList

    error  shift, and go to state 42
    TYPE   shift, and go to state 2

    INT       reduce using rule 34 (VarDefList)
    ID        reduce using rule 34 (VarDefList)
    FLOAT     reduce using rule 34 (VarDefList)
    CHAR      reduce using rule 34 (VarDefList)
    LP        reduce using rule 34 (VarDefList)
    LC        reduce using rule 34 (VarDefList)
    RC        reduce using rule 34 (VarDefList)
    SEMI      reduce using rule 34 (VarDefList)
    MINUS     reduce using rule 34 (VarDefList)
    NOT       reduce using rule 34 (VarDefList)
    IF        reduce using rule 34 (VarDefList)
    WHILE     reduce using rule 34 (VarDefList)
    RETURN    reduce using rule 34 (VarDefList)
    CONTINUE  reduce using rule 34 (VarDefList)
    BREAK     reduce using rule 34 (VarDefList)
    DPLUS     reduce using rule 34 (VarDefList)
    DMINUS    reduce using rule 34 (VarDefList)

    Specifier   go to state 43
    VarDefList  go to state 91
    VarDef      go to state 45


State 46

    9 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 9 (ExtDecList)


State 47

   21 ParamDec: Specifier ID .

    $default  reduce using rule 21 (ParamDec)


State 48

   17 FuncDec: ID LP ParamList RP .

    $default  reduce using rule 17 (FuncDec)


State 49

   20 ParamList: ParamDec COMMA . ParamList

    TYPE  shift, and go to state 2

    Specifier  go to state 25
    ParamList  go to state 92
    ParamDec   go to state 27


State 50

   66 Exp: ID LP . Args RP
   67    | ID LP . RP

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    RP      shift, and go to state 93
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp   go to state 94
    Args  go to state 95


State 51

   68 Exp: ID ArraySubList .

    $default  reduce using rule 68 (Exp)


State 52

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   59    | LP Exp . RP
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP        shift, and go to state 57
    COMP_ASSIGN  shift, and go to state 58
    RP           shift, and go to state 96
    PLUS         shift, and go to state 60
    MINUS        shift, and go to state 61
    STAR         shift, and go to state 62
    DIV          shift, and go to state 63
    MOD          shift, and go to state 64
    ASSIGNOP     shift, and go to state 65
    AND          shift, and go to state 66
    OR           shift, and go to state 67
    BITAND       shift, and go to state 68
    BITOR        shift, and go to state 69
    BITXOR       shift, and go to state 70
    BITSHL       shift, and go to state 71
    BITSHR       shift, and go to state 72
    DPLUS        shift, and go to state 73
    DMINUS       shift, and go to state 74


State 53

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   60    | MINUS Exp .
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 60 (Exp)


State 54

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   61    | NOT Exp .
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 61 (Exp)


State 55

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   62    | DPLUS Exp .
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 62 (Exp)


State 56

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   64    | DMINUS Exp .
   65    | Exp . DMINUS

    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 64 (Exp)


State 57

   47 Exp: Exp RELOP . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 97


State 58

   53 Exp: Exp COMP_ASSIGN . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 98


State 59

   14 ArraySubList: LS Exp RS .
   15             | LS Exp RS . ArraySubList

    LS  shift, and go to state 16

    $default  reduce using rule 14 (ArraySubList)

    ArraySubList  go to state 99


State 60

   48 Exp: Exp PLUS . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 100


State 61

   49 Exp: Exp MINUS . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 101


State 62

   50 Exp: Exp STAR . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 102


State 63

   51 Exp: Exp DIV . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 103


State 64

   52 Exp: Exp MOD . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 104


State 65

   44 Exp: Exp ASSIGNOP . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 105


State 66

   45 Exp: Exp AND . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 106


State 67

   46 Exp: Exp OR . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 107


State 68

   54 Exp: Exp BITAND . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 108


State 69

   55 Exp: Exp BITOR . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 109


State 70

   56 Exp: Exp BITXOR . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 110


State 71

   57 Exp: Exp BITSHL . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 111


State 72

   58 Exp: Exp BITSHR . Exp

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 112


State 73

   63 Exp: Exp DPLUS .

    $default  reduce using rule 63 (Exp)


State 74

   65 Exp: Exp DMINUS .

    $default  reduce using rule 65 (Exp)


State 75

   16 ArrayInitList: LC . Args RC

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp   go to state 94
    Args  go to state 113


State 76

   13 ArrayDec: ID ArraySubList ASSIGNOP ArrayInitList .

    $default  reduce using rule 13 (ArrayDec)


State 77

   36 VarDefList: error SEMI .

    $default  reduce using rule 36 (VarDefList)


State 78

   40 VarDecList: ArrayDec .
   41           | ArrayDec . COMMA ExtDecList

    COMMA  shift, and go to state 114

    $default  reduce using rule 40 (VarDecList)


State 79

   37 VarDef: Specifier VarDecList . SEMI

    SEMI  shift, and go to state 115


State 80

   38 VarDecList: VarDec .
   39           | VarDec . COMMA VarDecList

    COMMA  shift, and go to state 116

    $default  reduce using rule 38 (VarDecList)


State 81

   31 Stmt: SEMI .

    $default  reduce using rule 31 (Stmt)


State 82

   28 Stmt: IF . LP Exp RP Stmt
   29     | IF . LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 117


State 83

   30 Stmt: WHILE . LP Exp RP Stmt

    LP  shift, and go to state 118


State 84

   27 Stmt: RETURN . Exp SEMI

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 119


State 85

   32 Stmt: CONTINUE .

    $default  reduce using rule 32 (Stmt)


State 86

   33 Stmt: BREAK .

    $default  reduce using rule 33 (Stmt)


State 87

   26 Stmt: CompSt .

    $default  reduce using rule 26 (Stmt)


State 88

   22 CompSt: LC VarDefList StmList . RC

    RC  shift, and go to state 120


State 89

   24 StmList: Stmt . StmList

    INT       shift, and go to state 28
    ID        shift, and go to state 29
    FLOAT     shift, and go to state 30
    CHAR      shift, and go to state 31
    LP        shift, and go to state 32
    LC        shift, and go to state 21
    SEMI      shift, and go to state 81
    MINUS     shift, and go to state 33
    NOT       shift, and go to state 34
    IF        shift, and go to state 82
    WHILE     shift, and go to state 83
    RETURN    shift, and go to state 84
    CONTINUE  shift, and go to state 85
    BREAK     shift, and go to state 86
    DPLUS     shift, and go to state 35
    DMINUS    shift, and go to state 36

    $default  reduce using rule 23 (StmList)

    CompSt   go to state 87
    StmList  go to state 121
    Stmt     go to state 89
    Exp      go to state 90


State 90

   25 Stmt: Exp . SEMI
   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP        shift, and go to state 57
    COMP_ASSIGN  shift, and go to state 58
    SEMI         shift, and go to state 122
    PLUS         shift, and go to state 60
    MINUS        shift, and go to state 61
    STAR         shift, and go to state 62
    DIV          shift, and go to state 63
    MOD          shift, and go to state 64
    ASSIGNOP     shift, and go to state 65
    AND          shift, and go to state 66
    OR           shift, and go to state 67
    BITAND       shift, and go to state 68
    BITOR        shift, and go to state 69
    BITXOR       shift, and go to state 70
    BITSHL       shift, and go to state 71
    BITSHR       shift, and go to state 72
    DPLUS        shift, and go to state 73
    DMINUS       shift, and go to state 74


State 91

   35 VarDefList: VarDef VarDefList .

    $default  reduce using rule 35 (VarDefList)


State 92

   20 ParamList: ParamDec COMMA ParamList .

    $default  reduce using rule 20 (ParamList)


State 93

   67 Exp: ID LP RP .

    $default  reduce using rule 67 (Exp)


State 94

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS
   73 Args: Exp . COMMA Args
   74     | Exp .

    RELOP        shift, and go to state 57
    COMP_ASSIGN  shift, and go to state 58
    COMMA        shift, and go to state 123
    PLUS         shift, and go to state 60
    MINUS        shift, and go to state 61
    STAR         shift, and go to state 62
    DIV          shift, and go to state 63
    MOD          shift, and go to state 64
    ASSIGNOP     shift, and go to state 65
    AND          shift, and go to state 66
    OR           shift, and go to state 67
    BITAND       shift, and go to state 68
    BITOR        shift, and go to state 69
    BITXOR       shift, and go to state 70
    BITSHL       shift, and go to state 71
    BITSHR       shift, and go to state 72
    DPLUS        shift, and go to state 73
    DMINUS       shift, and go to state 74

    $default  reduce using rule 74 (Args)


State 95

   66 Exp: ID LP Args . RP

    RP  shift, and go to state 124


State 96

   59 Exp: LP Exp RP .

    $default  reduce using rule 59 (Exp)


State 97

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   47    | Exp RELOP Exp .
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    PLUS    shift, and go to state 60
    MINUS   shift, and go to state 61
    STAR    shift, and go to state 62
    DIV     shift, and go to state 63
    MOD     shift, and go to state 64
    BITSHL  shift, and go to state 71
    BITSHR  shift, and go to state 72
    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 47 (Exp)


State 98

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   53    | Exp COMP_ASSIGN Exp .
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP        shift, and go to state 57
    COMP_ASSIGN  shift, and go to state 58
    PLUS         shift, and go to state 60
    MINUS        shift, and go to state 61
    STAR         shift, and go to state 62
    DIV          shift, and go to state 63
    MOD          shift, and go to state 64
    ASSIGNOP     shift, and go to state 65
    AND          shift, and go to state 66
    OR           shift, and go to state 67
    BITAND       shift, and go to state 68
    BITOR        shift, and go to state 69
    BITXOR       shift, and go to state 70
    BITSHL       shift, and go to state 71
    BITSHR       shift, and go to state 72
    DPLUS        shift, and go to state 73
    DMINUS       shift, and go to state 74

    $default  reduce using rule 53 (Exp)


State 99

   15 ArraySubList: LS Exp RS ArraySubList .

    $default  reduce using rule 15 (ArraySubList)


State 100

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   48    | Exp PLUS Exp .
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    STAR    shift, and go to state 62
    DIV     shift, and go to state 63
    MOD     shift, and go to state 64
    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 48 (Exp)


State 101

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   49    | Exp MINUS Exp .
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    STAR    shift, and go to state 62
    DIV     shift, and go to state 63
    MOD     shift, and go to state 64
    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 49 (Exp)


State 102

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   50    | Exp STAR Exp .
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 50 (Exp)


State 103

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   51    | Exp DIV Exp .
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 51 (Exp)


State 104

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   52    | Exp MOD Exp .
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 52 (Exp)


State 105

   44 Exp: Exp . ASSIGNOP Exp
   44    | Exp ASSIGNOP Exp .
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP        shift, and go to state 57
    COMP_ASSIGN  shift, and go to state 58
    PLUS         shift, and go to state 60
    MINUS        shift, and go to state 61
    STAR         shift, and go to state 62
    DIV          shift, and go to state 63
    MOD          shift, and go to state 64
    ASSIGNOP     shift, and go to state 65
    AND          shift, and go to state 66
    OR           shift, and go to state 67
    BITAND       shift, and go to state 68
    BITOR        shift, and go to state 69
    BITXOR       shift, and go to state 70
    BITSHL       shift, and go to state 71
    BITSHR       shift, and go to state 72
    DPLUS        shift, and go to state 73
    DMINUS       shift, and go to state 74

    $default  reduce using rule 44 (Exp)


State 106

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   45    | Exp AND Exp .
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP   shift, and go to state 57
    PLUS    shift, and go to state 60
    MINUS   shift, and go to state 61
    STAR    shift, and go to state 62
    DIV     shift, and go to state 63
    MOD     shift, and go to state 64
    BITAND  shift, and go to state 68
    BITOR   shift, and go to state 69
    BITXOR  shift, and go to state 70
    BITSHL  shift, and go to state 71
    BITSHR  shift, and go to state 72
    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 45 (Exp)


State 107

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   46    | Exp OR Exp .
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP   shift, and go to state 57
    PLUS    shift, and go to state 60
    MINUS   shift, and go to state 61
    STAR    shift, and go to state 62
    DIV     shift, and go to state 63
    MOD     shift, and go to state 64
    AND     shift, and go to state 66
    BITAND  shift, and go to state 68
    BITOR   shift, and go to state 69
    BITXOR  shift, and go to state 70
    BITSHL  shift, and go to state 71
    BITSHR  shift, and go to state 72
    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 46 (Exp)


State 108

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   54    | Exp BITAND Exp .
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP   shift, and go to state 57
    PLUS    shift, and go to state 60
    MINUS   shift, and go to state 61
    STAR    shift, and go to state 62
    DIV     shift, and go to state 63
    MOD     shift, and go to state 64
    BITSHL  shift, and go to state 71
    BITSHR  shift, and go to state 72
    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 54 (Exp)


State 109

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   55    | Exp BITOR Exp .
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP   shift, and go to state 57
    PLUS    shift, and go to state 60
    MINUS   shift, and go to state 61
    STAR    shift, and go to state 62
    DIV     shift, and go to state 63
    MOD     shift, and go to state 64
    BITAND  shift, and go to state 68
    BITXOR  shift, and go to state 70
    BITSHL  shift, and go to state 71
    BITSHR  shift, and go to state 72
    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 55 (Exp)


State 110

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   56    | Exp BITXOR Exp .
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP   shift, and go to state 57
    PLUS    shift, and go to state 60
    MINUS   shift, and go to state 61
    STAR    shift, and go to state 62
    DIV     shift, and go to state 63
    MOD     shift, and go to state 64
    BITAND  shift, and go to state 68
    BITSHL  shift, and go to state 71
    BITSHR  shift, and go to state 72
    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 56 (Exp)


State 111

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   57    | Exp BITSHL Exp .
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    PLUS    shift, and go to state 60
    MINUS   shift, and go to state 61
    STAR    shift, and go to state 62
    DIV     shift, and go to state 63
    MOD     shift, and go to state 64
    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 57 (Exp)


State 112

   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   58    | Exp BITSHR Exp .
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    PLUS    shift, and go to state 60
    MINUS   shift, and go to state 61
    STAR    shift, and go to state 62
    DIV     shift, and go to state 63
    MOD     shift, and go to state 64
    DPLUS   shift, and go to state 73
    DMINUS  shift, and go to state 74

    $default  reduce using rule 58 (Exp)


State 113

   16 ArrayInitList: LC Args . RC

    RC  shift, and go to state 125


State 114

   41 VarDecList: ArrayDec COMMA . ExtDecList

    ID  shift, and go to state 40

    ExtDecList  go to state 126
    ArrayDec    go to state 12
    VarDec      go to state 14


State 115

   37 VarDef: Specifier VarDecList SEMI .

    $default  reduce using rule 37 (VarDef)


State 116

   39 VarDecList: VarDec COMMA . VarDecList

    ID  shift, and go to state 40

    ArrayDec    go to state 78
    VarDecList  go to state 127
    VarDec      go to state 80


State 117

   28 Stmt: IF LP . Exp RP Stmt
   29     | IF LP . Exp RP Stmt ELSE Stmt

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 128


State 118

   30 Stmt: WHILE LP . Exp RP Stmt

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp  go to state 129


State 119

   27 Stmt: RETURN Exp . SEMI
   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP        shift, and go to state 57
    COMP_ASSIGN  shift, and go to state 58
    SEMI         shift, and go to state 130
    PLUS         shift, and go to state 60
    MINUS        shift, and go to state 61
    STAR         shift, and go to state 62
    DIV          shift, and go to state 63
    MOD          shift, and go to state 64
    ASSIGNOP     shift, and go to state 65
    AND          shift, and go to state 66
    OR           shift, and go to state 67
    BITAND       shift, and go to state 68
    BITOR        shift, and go to state 69
    BITXOR       shift, and go to state 70
    BITSHL       shift, and go to state 71
    BITSHR       shift, and go to state 72
    DPLUS        shift, and go to state 73
    DMINUS       shift, and go to state 74


State 120

   22 CompSt: LC VarDefList StmList RC .

    $default  reduce using rule 22 (CompSt)


State 121

   24 StmList: Stmt StmList .

    $default  reduce using rule 24 (StmList)


State 122

   25 Stmt: Exp SEMI .

    $default  reduce using rule 25 (Stmt)


State 123

   73 Args: Exp COMMA . Args

    INT     shift, and go to state 28
    ID      shift, and go to state 29
    FLOAT   shift, and go to state 30
    CHAR    shift, and go to state 31
    LP      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36

    Exp   go to state 94
    Args  go to state 131


State 124

   66 Exp: ID LP Args RP .

    $default  reduce using rule 66 (Exp)


State 125

   16 ArrayInitList: LC Args RC .

    $default  reduce using rule 16 (ArrayInitList)


State 126

   41 VarDecList: ArrayDec COMMA ExtDecList .

    $default  reduce using rule 41 (VarDecList)


State 127

   39 VarDecList: VarDec COMMA VarDecList .

    $default  reduce using rule 39 (VarDecList)


State 128

   28 Stmt: IF LP Exp . RP Stmt
   29     | IF LP Exp . RP Stmt ELSE Stmt
   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP        shift, and go to state 57
    COMP_ASSIGN  shift, and go to state 58
    RP           shift, and go to state 132
    PLUS         shift, and go to state 60
    MINUS        shift, and go to state 61
    STAR         shift, and go to state 62
    DIV          shift, and go to state 63
    MOD          shift, and go to state 64
    ASSIGNOP     shift, and go to state 65
    AND          shift, and go to state 66
    OR           shift, and go to state 67
    BITAND       shift, and go to state 68
    BITOR        shift, and go to state 69
    BITXOR       shift, and go to state 70
    BITSHL       shift, and go to state 71
    BITSHR       shift, and go to state 72
    DPLUS        shift, and go to state 73
    DMINUS       shift, and go to state 74


State 129

   30 Stmt: WHILE LP Exp . RP Stmt
   44 Exp: Exp . ASSIGNOP Exp
   45    | Exp . AND Exp
   46    | Exp . OR Exp
   47    | Exp . RELOP Exp
   48    | Exp . PLUS Exp
   49    | Exp . MINUS Exp
   50    | Exp . STAR Exp
   51    | Exp . DIV Exp
   52    | Exp . MOD Exp
   53    | Exp . COMP_ASSIGN Exp
   54    | Exp . BITAND Exp
   55    | Exp . BITOR Exp
   56    | Exp . BITXOR Exp
   57    | Exp . BITSHL Exp
   58    | Exp . BITSHR Exp
   63    | Exp . DPLUS
   65    | Exp . DMINUS

    RELOP        shift, and go to state 57
    COMP_ASSIGN  shift, and go to state 58
    RP           shift, and go to state 133
    PLUS         shift, and go to state 60
    MINUS        shift, and go to state 61
    STAR         shift, and go to state 62
    DIV          shift, and go to state 63
    MOD          shift, and go to state 64
    ASSIGNOP     shift, and go to state 65
    AND          shift, and go to state 66
    OR           shift, and go to state 67
    BITAND       shift, and go to state 68
    BITOR        shift, and go to state 69
    BITXOR       shift, and go to state 70
    BITSHL       shift, and go to state 71
    BITSHR       shift, and go to state 72
    DPLUS        shift, and go to state 73
    DMINUS       shift, and go to state 74


State 130

   27 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 27 (Stmt)


State 131

   73 Args: Exp COMMA Args .

    $default  reduce using rule 73 (Args)


State 132

   28 Stmt: IF LP Exp RP . Stmt
   29     | IF LP Exp RP . Stmt ELSE Stmt

    INT       shift, and go to state 28
    ID        shift, and go to state 29
    FLOAT     shift, and go to state 30
    CHAR      shift, and go to state 31
    LP        shift, and go to state 32
    LC        shift, and go to state 21
    SEMI      shift, and go to state 81
    MINUS     shift, and go to state 33
    NOT       shift, and go to state 34
    IF        shift, and go to state 82
    WHILE     shift, and go to state 83
    RETURN    shift, and go to state 84
    CONTINUE  shift, and go to state 85
    BREAK     shift, and go to state 86
    DPLUS     shift, and go to state 35
    DMINUS    shift, and go to state 36

    CompSt  go to state 87
    Stmt    go to state 134
    Exp     go to state 90


State 133

   30 Stmt: WHILE LP Exp RP . Stmt

    INT       shift, and go to state 28
    ID        shift, and go to state 29
    FLOAT     shift, and go to state 30
    CHAR      shift, and go to state 31
    LP        shift, and go to state 32
    LC        shift, and go to state 21
    SEMI      shift, and go to state 81
    MINUS     shift, and go to state 33
    NOT       shift, and go to state 34
    IF        shift, and go to state 82
    WHILE     shift, and go to state 83
    RETURN    shift, and go to state 84
    CONTINUE  shift, and go to state 85
    BREAK     shift, and go to state 86
    DPLUS     shift, and go to state 35
    DMINUS    shift, and go to state 36

    CompSt  go to state 87
    Stmt    go to state 135
    Exp     go to state 90


State 134

   28 Stmt: IF LP Exp RP Stmt .
   29     | IF LP Exp RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 136

    $default  reduce using rule 28 (Stmt)


State 135

   30 Stmt: WHILE LP Exp RP Stmt .

    $default  reduce using rule 30 (Stmt)


State 136

   29 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    INT       shift, and go to state 28
    ID        shift, and go to state 29
    FLOAT     shift, and go to state 30
    CHAR      shift, and go to state 31
    LP        shift, and go to state 32
    LC        shift, and go to state 21
    SEMI      shift, and go to state 81
    MINUS     shift, and go to state 33
    NOT       shift, and go to state 34
    IF        shift, and go to state 82
    WHILE     shift, and go to state 83
    RETURN    shift, and go to state 84
    CONTINUE  shift, and go to state 85
    BREAK     shift, and go to state 86
    DPLUS     shift, and go to state 35
    DMINUS    shift, and go to state 36

    CompSt  go to state 87
    Stmt    go to state 137
    Exp     go to state 90


State 137

   29 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 29 (Stmt)
